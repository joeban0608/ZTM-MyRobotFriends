{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","component/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robotsInfo","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","Searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAgBeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAA1B,cAC3B,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EAvBE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAKhB,OACI,8BAEQA,EAAWC,KAAI,SAACC,EAAKC,GACjB,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAWG,GAAGR,GAClBF,KAAMO,EAAWG,GAAGV,KACpBC,MAAOM,EAAWG,GAAGT,OAHhBM,EAAWG,GAAGR,UCE5BS,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,0CACVU,KAAK,SACLC,YAAY,aACZC,SAAUH,OCCXI,EATA,SAACC,GACZ,OAEI,aADA,CACA,OAAKC,MAAO,CAAEC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCiBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SAEJ,6BAAI,4DAERG,KAAKX,MAAMK,a,GAjBEQ,aC8CbC,G,wDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTjB,WAAY,GACZ2B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,WAAYkC,S,oBAO/C,WACI,MAAqCb,KAAKJ,MAAlCjB,EAAR,EAAQA,WAAa2B,EAArB,EAAqBA,YACfQ,EAAiBnC,EAAWoC,QAAO,SAAAC,GACrC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAWwC,OAGf,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,SAAmB,kDACnB,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,WAAamC,WAPvC,oBAAIvC,UAAU,QAAd,SAAsB,oD,GAzBZ2B,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc48dd5e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n// // more cleaner \r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br-100 pa5 ma3 grow bw2 shadow-5\">\r\n            <img alt=\"robot-friend\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div >\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robotsInfo }) => {\r\n    // test throw error\r\n    // if (true) {\r\n    //     throw new Error('No..there is throw Error testing')\r\n    // }\r\n    return (\r\n        <div>\r\n            {\r\n                robotsInfo.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={robotsInfo[i].id} \r\n                        id={robotsInfo[i].id} \r\n                        name={robotsInfo[i].name} \r\n                        email={robotsInfo[i].email}  \r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n// const SearchBox = () => {\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bw2 bg-lightest-blue tc\" \r\n                type=\"search\" \r\n                placeholder=\"search box\" \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        // <div style={{ overflowY:'scroll', border:'1px solid black', height:'500px'}}>\r\n        <div style={{ overflowY:'scroll', border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // 你可以render 任何客製化的 fallback UI\r\n            return <h1><span>Oops. That is not good</span></h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from 'react';\r\nimport CardList from '../component/CardList';\r\nimport SearchBox from '../component/SearchBox';\r\nimport Scroll from '../component/Scroll';\r\nimport ErrorBoundary from '../component/ErrorBoundary'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robotsInfo: [],\r\n            Searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robotsInfo: users }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ Searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robotsInfo , Searchfield } = this.state;\r\n        const filteredRobots = robotsInfo.filter(robot => {\r\n            return robot.name.toLowerCase().includes(Searchfield.toLowerCase());\r\n        })\r\n        return !robotsInfo.length ?\r\n        <h1 className=\"tc f1\"><span>Loading...</span></h1> :\r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\"><span>RobotFriends</span></h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robotsInfo={ filteredRobots }/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n          \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}